/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 *
 *   Created: Wed Jan 11 06:16:39 1995
 */
#if __STDC__

extern int altaz ( double pol[3], double J );
extern int angles ( double p[], double q[], double e[] );
extern int annuab ( double p[] );
extern int iter_trnsit ( int (*func)() );
extern double caltoj ( long year, int month, double day );
extern int cvtdec ( unsigned short *x );
extern int deltap ( double p0[], double p1[], double *dr, double *dd );
extern double deltat ( double Y );
extern int diurab ( double last, double *ra, double *dec );
extern int diurpx ( double last, double *ra, double *dec, double dist );
extern int dms ( double x );
extern int domoon ( void );
extern int doscsi ( unsigned char *cmdb, unsigned char *datbuf );
extern int dosun ( void );
extern int dostar ( void );
extern int doplanet ( void );
extern int epsiln ( double J );
extern FILE *fincat ( char *name, int n, char *str1, char *str2 );
extern int fk4fk5 ( double p[], double m[], struct star *el );
extern double zgetdate ( void );
extern double gethms ( void );
extern int getnum ( char *msg, void *num, char *format );
extern int getorbit ( struct orbit *el );
extern int getstar ( struct star *el );
extern int hms ( double x );
extern int jpl ( double JD, int objnum, double p[], double v[] );
extern int jtocal ( double J );
extern int kepjpl ( double J, struct orbit *e, double rect[], double polar[] );
extern int kepler0 (double J, struct orbit *e, double rect[], double polar[]);
extern int kepler ( double J, struct orbit *e, double rect[], double polar[] );
extern int kinit ( void );
extern int lightt ( struct orbit *elemnt, double q[], double e[] );
extern int lonlat ( double pp[], double J, double polar[], int ofdate );
extern double mod360 ( double x );
extern double modtp ( double x );
extern int moonll ( double J, double pp[] );
extern int nutate ( double J, double p[] );
extern int nutlo ( double J );
extern int oparams ( double re[], double rdote[], double J, double JDE, int objnum, struct orbit *orb );
extern int precess ( double R[], double J, int direction );
extern int printorb ( struct orbit *o );
extern void prvec ( double vec[] );
extern int reduce ( struct orbit *elemnt, double q[], double e[] );
extern double refrac ( double alt );
extern int relativity ( double p[], double q[], double e[] );
extern int reselh ( void );
extern int revbytes ( void );
extern int rstar ( struct star *el );
extern long sccomm ( long code, long block, long count );
extern long scrset ( long x );
extern int showcname ( char *in );
extern int showcor ( char *strng, double p[], double dp[] );
extern int showrd ( char *msg, double p[], double pol[] );
extern double sidrlt ( double j, double tlong );
extern int sread ( char *q, int k );
extern int sscc ( int k, double arg, int n );
extern int swrite ( char *q, int k );
extern double tdb ( double JED );
extern int trnsit ( double J, double lha, double dec );
extern int update ( void );
extern int velearth ( double J );
extern int watnreq ( void );
extern int watphas ( void );
extern int watreq ( void );
extern double zatan2 ( double x, double y );
extern int zopen ( char *name, int a, int b );
extern int zread ( int fd, char *buf, int bct );
extern int zseek ( int fd, unsigned long bcnt, int a );
extern double acos (double);
extern double asin (double);
extern double atan (double);
extern double cos (double);
extern double sin (double);
extern double tan (double);
extern double sqrt (double);
extern double fabs (double);
extern double log (double);
extern double floor (double);
extern char *whatconstel (double *, double);
extern void EtoM( double e[], double M[] );
extern void MtoE( double M[], double e[] );
extern void midentity ( double M[] );
extern void mtransp ( double A[], double B[] );
extern void mmpy3 ( double A[], double B[], double C[] );
extern void mrotx (double M[], double theta );
extern void mroty (double M[], double theta );
extern void mrotz (double M[], double theta );
#endif /* __STDC__ */
